package com.yodobashi.esa.auth.validateauthsession;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.5.2
 * 2012-06-18T12:41:10.794+09:00
 * Generated source version: 2.5.2
 * 
 */
@WebServiceClient(name = "ValidateAuthSessionService", 
                  wsdlLocation = "../ValidateAuthSession20070410.wsdl",
                  targetNamespace = "http://esa.yodobashi.com/AUTH/ValidateAuthSession") 
public class ValidateAuthSessionService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://esa.yodobashi.com/AUTH/ValidateAuthSession", "ValidateAuthSessionService");
    public final static QName ValidateAuthSessionPort = new QName("http://esa.yodobashi.com/AUTH/ValidateAuthSession", "ValidateAuthSessionPort");
    static {
        URL url = ValidateAuthSessionService.class.getResource("../ValidateAuthSession20070410.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(ValidateAuthSessionService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "../ValidateAuthSession20070410.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public ValidateAuthSessionService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ValidateAuthSessionService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ValidateAuthSessionService() {
        super(WSDL_LOCATION, SERVICE);
    }


    /**
     *
     * @return
     *     returns ValidateAuthSession
     */
    @WebEndpoint(name = "ValidateAuthSessionPort")
    public ValidateAuthSession getValidateAuthSessionPort() {
        return super.getPort(ValidateAuthSessionPort, ValidateAuthSession.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ValidateAuthSession
     */
    @WebEndpoint(name = "ValidateAuthSessionPort")
    public ValidateAuthSession getValidateAuthSessionPort(WebServiceFeature... features) {
        return super.getPort(ValidateAuthSessionPort, ValidateAuthSession.class, features);
    }

}
